server:
  port: 9001
  shutdown: graceful # Graceful shutdown
  tomcat:
    connection-timeout: 2s
    keep-alive-timeout: 15s
    threads:
      max: 50
      min-spare: 5
spring:
  application:
    name: catalog-service
  lifecycle:
    timeout-per-shutdown-phase: 15s # Timeout for each phase of the graceful shutdown (ms)
  config:
    import: "optional:configserver:"
  cloud:
    config:
      uri: http://localhost:8888
      # The following are the default timeout settings
      request-connect-timeout: 5000 # 5 seconds Timeout on waiting to connect to the config server (ms)
      request-read-timeout: 5000 # 5 seconds Timeout on waiting to read configuration data from the config server (ms)
      # The following are the default retry settings
      fail-fast: false # Makes a failure to connect to the config server fatal
      retry:
          max-attempts: 6 # Maximum number of attempts to connect to the config server
          initial-interval: 1000 # 1 second Initial interval between attempts to connect to the config server (ms)
          max-interval: 2000 # 2 seconds Maximum interval between attempts to connect to the config server (ms)
          multiplier: 1.1 # Multiplier to apply to the previous interval between attempts to connect to the config server
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080/realms/PolarBookshop # The issuer URI of the Keycloak server
  # The following are the default settings for the data source
  datasource:
    username: user
    password: password
    url: jdbc:postgresql://localhost:5432/polardb_catalog # The name of the database is polardb_catalog
    hikari:
      connection-timeout: 2000 # 2 seconds Timeout for connecting to the database (ms)
      maximum-pool-size: 5 # Maximum number of connections in the pool
logging:
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"
info:
  system: Polar Bookshop
management:
  endpoints:
    web:
      exposure:
        include: configprops, env, flyway, health, heapdump, info, loggers, mappings, prometheus
  endpoint:
    health:
      show-details: always
      show-components: always
      probes:
        enabled: true
  info:
    env:
      enabled: true
    java:
      enabled: true
    os:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name} # Add common tags to all metrics come from this application
polar:
  greeting: Welcome to the local book catalog!